x-airflow-common:
  &airflow-common
  image: apache/airflow:slim-latest
  environment:
    &airflow-common-env
    AIRFLOW_EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:postgres@postgres/airbnb
    AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    AIRFLOW__API__AUTH_BACKENDS: "airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session"
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
  user: "${AIRFLOW_UID:-50000}:0"
  networks:
    airbnb:

services:
  airflow-init:
    <<: *airflow-common
    container_name: airflow-init
    command: ["bash", "-c", "airflow db init && airflow db migrate"]
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_MIGRATE: "true"
      _AIRFLOW_WWW_USER_CREATE: "true"
      _AIRFLOW_WWW_USER_USERNAME: airbnb
      _AIRFLOW_WWW_USER_PASSWORD: airbnb
      _AIRFLOW_WWW_USER_EMAIL: user123@gmail.com
      _AIRFLOW_WWW_USER_ROLE: Admin
    volumes:
      - .:/sources
    depends_on:
      - postgres
    networks:
      - airbnb

  airflow-webserver:
    <<: *airflow-common
    container_name: airflow-webserver
    command: webserver
    environment:
      <<: *airflow-common-env 
    ports:
      - 8080:8080
    restart: always
    networks:
      - airbnb
    depends_on:
      - airflow-init

  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow-scheduler
    command: scheduler
    environment:
      <<: *airflow-common-env
    restart: always
    networks:
      - airbnb
    depends_on:
      - airflow-init

  postgres:
    image: postgres:15.5-alpine
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: airbnb
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    restart: always
    networks:
      - airbnb

volumes:
  postgres-data:

networks:
  airbnb:
